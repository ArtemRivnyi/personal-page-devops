name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è security-scan
permissions:
  contents: read
  security-events: write
  actions: read

env:
  NODE_VERSION: '18'

jobs:
  lint-and-validate:
    name: Lint & Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Stylelint
        run: npm run stylelint

      - name: Validate HTML
        run: npm run html-validate

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build-and-test-docker:
    name: Build & Test Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: personal-portfolio:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Test Docker container
        run: |
          docker run -d -p 8080:80 --name test-container personal-portfolio:test
          sleep 5
          curl -f http://localhost:8080/ || exit 1
          docker logs test-container
          docker stop test-container
          docker rm test-container

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint-and-validate, test, build-and-test-docker, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: https://personal-page-devops.onrender.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Render
        run: |
          echo "‚úÖ Deployment triggered automatically by Render"
          echo "üöÄ Render will pull latest changes and deploy"

      - name: Wait for deployment
        run: sleep 30

      - name: Verify deployment
        run: |
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://personal-page-devops.onrender.com)
          if [ $HTTP_CODE -eq 200 ]; then
            echo "‚úÖ Deployment successful! Site is live."
          else
            echo "‚ùå Deployment verification failed. HTTP Code: $HTTP_CODE"
            exit 1
          fi

      - name: Create deployment notification
        if: success()
        run: |
          echo "üéâ Successfully deployed to production!"
          echo "üìä Version: ${{ github.sha }}"
          echo "üîó URL: https://personal-page-devops.onrender.com"